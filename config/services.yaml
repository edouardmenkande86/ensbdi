# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'fr'
    sonata.admin.security.mask.builder.class: Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder
    
   

services:
    security.acl.permission.map:
      class: Sonata\AdminBundle\Security\Acl\Permission\AdminPermissionMap
    


    admin.article:
        class: App\Admin\ArticleAdmin
        arguments: [~, App\Entity\Article, ~]
        tags:
           - { name: sonata.admin, manager_type: orm, label: Article }

    admin.grade:
        class: App\Admin\GradeAdmin
        arguments: [~, App\Entity\Grade, ~]
        tags:
           - { name: sonata.admin, manager_type: orm, label: Grade Enseignant }
           
    admin.laboratoire:
        class: App\Admin\LaboratoireAdmin
        arguments: [~, App\Entity\Laboratoire, ~]
        tags:
           - { name: sonata.admin, manager_type: orm, label: Laboratoire }

    admin.formation:
        class: App\Admin\FormationAdmin
        arguments: [~, App\Entity\Formation, ~]
        tags:
           - { name: sonata.admin, manager_type: orm, label: Formation }

    
    admin.attribution:
        class: App\Admin\AttributionAdmin
        arguments: [~, App\Entity\Attribution, ~]
        tags:
           - { name: sonata.admin, manager_type: orm, label: Attributions }

    admin.association:
        class: App\Admin\AssociationAdmin
        arguments: [~, App\Entity\Association, ~]
        tags:
           - { name: sonata.admin, manager_type: orm, label: Associations }

    admin.responsable:
        class: App\Admin\ResponsableAdmin
        arguments: [~, App\Entity\Responsable, ~]
        tags:
           - { name: sonata.admin, manager_type: orm, label: Responsables }

    admin.partenaire:
        class: App\Admin\PartenaireAdmin
        arguments: [~, App\Entity\Partenaire, ~]
        tags:
           - { name: sonata.admin, manager_type: orm, label: Nos Partenaires }

    admin.departement:
        class: App\Admin\DepartementAdmin
        arguments: [~, App\Entity\Departement, ~]
        tags:
           - { name: sonata.admin, manager_type: orm, label: DÃ©partement }

    admin.division:
        class: App\Admin\DivisionAdmin
        arguments: [~, App\Entity\Division, ~]
        tags:
           - { name: sonata.admin, manager_type: orm, label: Division }

    admin.service:
        class: App\Admin\ServiceAdmin
        arguments: [~, App\Entity\Service, ~]
        tags:
           - { name: sonata.admin, manager_type: orm, label: Service }


    admin.cycle:
        class: App\Admin\CycleAdmin
        arguments: [~, App\Entity\Cycle, ~]
        tags:
           - { name: sonata.admin, manager_type: orm, label: Cycle }

    admin.filiere:
        class: App\Admin\FiliereAdmin
        arguments: [~, App\Entity\Filiere, ~]
        tags:
           - { name: sonata.admin, manager_type: orm, label: Filiere }
    
    admin.laureat:
        class: App\Admin\LaureatAdmin
        arguments: [~, App\Entity\Laureat, ~]
        tags:
           - { name: sonata.admin, manager_type: orm, label: Laureat }

    admin.memoire:
        class: App\Admin\MemoireAdmin
        arguments: [~, App\Entity\Memoire, ~]
        tags:
           - { name: sonata.admin, manager_type: orm, label: Memoires }

    admin.categorie:
        class: App\Admin\CategorieAdmin
        arguments: [~, App\Entity\Categorie, ~]
        tags:
           - { name: sonata.admin, manager_type: orm, label: Categories }

    admin.subcategorie:
        class: App\Admin\SubcategorieAdmin
        arguments: [~, App\Entity\Subcategorie, ~]
        tags:
           - { name: sonata.admin, manager_type: orm, label: Organe constitutif }

    admin.depliant:
        class: App\Admin\DepliantAdmin
        arguments: [~, App\Entity\Depliant, ~]
        tags:
           - { name: sonata.admin, manager_type: orm, label: Depliant }

    admin.publication:
        class: App\Admin\PublicationAdmin
        arguments: [~, App\Entity\Publication, ~]
        tags:
           - { name: sonata.admin, manager_type: orm, label: Publication }

    admin.centre:
        class: App\Admin\CentreAdmin
        arguments: [~, App\Entity\Centre, ~]
        tags:
           - { name: sonata.admin, manager_type: orm, label: Centre }

           

    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
